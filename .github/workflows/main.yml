name: Express API Build and Deploy
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - run: npm ci
    - run: npm test
    
  push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    strategy:
      matrix:
        node-version: [18.x] # Version what its going to be done before push
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Setup commit sha
      uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 7
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build non-master
      run: docker build --tag users:${{ steps.short-sha.outputs.sha }} .
    
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 232187837350.dkr.ecr.us-east-1.amazonaws.com
        ECR_REPOSITORY: users
        IMAGE_TAG: ${{ steps.short-sha.outputs.sha }}
      run: |
          docker tag $ECR_REPOSITORY:${{ steps.short-sha.outputs.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.short-sha.outputs.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ steps.short-sha.outputs.sha }}
